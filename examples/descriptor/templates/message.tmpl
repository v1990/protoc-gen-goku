{{- /*
    ÂΩìÂâçÁéØÂ¢ÉÁöÑÂèòÈáèÂÆö‰πâÔºåÊñπ‰æøÁª¥Êä§(‰∏∫‰∫ÜIDEÁöÑËØ≠Ê≥ïÈ´ò‰∫ÆüòÇ)
*/}}
{{- $Message := .Message}}
{{- $TypeName := .TypeName|title }}
{{- $StructName := $TypeName}}
{{- $Interface := printf "%sInterface" .TypeName|title}}
{{- $PbStruct := .TypeName|title }}
{{- $FieldFormat := "proto3"}}
{{- $ProtoTypeDescriptors := .ProtoTypeDescriptors}}
{{- $NestableDescriptors := .NestableDescriptors}}


{{- .CopyRight}}

package {{.outPkg}}

{{- $pbPkg := GoPackage "descriptorpb" }}
{{- $bytesPkg := GoPackage "bytes" }}
{{- $jsonPbPkg := GoPackage "github.com/gogo/protobuf/jsonpb" }}
import (
    {{$pbPkg.Import}}
    {{$bytesPkg.Import}}
    {{$jsonPbPkg.Import}}
)


{{/* LeadingDetachedComments Áã¨Á´ãÊ≥®Èáä */}}
{{- with $Message.Comments.LeadingDetachedComments}} {{ .|contact|join "\n"|withLineSlash }} {{end}}

{{- with $Message.Comments.LeadingComments}} {{ .|withLineSlash }}  {{end}}
{{- with $Message.Comments.TrailingComments}} {{"\n//\n"}}  {{.|withLineSlash}} {{end}}
//   See: {{$pbPkg}}.{{$StructName}}
type {{$StructName}} struct{
    common

    pb *{{$pbPkg}}.{{$PbStruct}}

    {{range $Message.Field}}
        {{if eq .Type "TYPE_MESSAGE"}}
            {{- $fieldName:=snakecase .Name}}
            {{- $RetType := .|GoType|Set "package" ""  }}
            {{$fieldName}} {{$RetType}}
        {{end}}
    {{end}}

    {{if eq $Message.Name "FileDescriptorProto"}}
        locByPath map[string]*SourceCodeInfo_Location
    {{end}}

    {{if (in $Message.Name $ProtoTypeDescriptors)}}
        pbTypeInfo *PbTypeInfo
    {{end}}
}

func new{{$StructName}}(desc *{{$pbPkg}}.{{$StructName}})*{{$StructName}}{
    t:=new({{$StructName}})
    t.pb = desc

    t.setDescriptor(t)

    return t
}

{{- /*********************************
    ÈÅçÂéÜÊØè‰∏™Â≠óÊÆµÔºåÁîüÊàêÂØπÂ∫îÁöÑGetter
    - GetField()
    - Field()
*************************************/}}
{{range $Message.Field}}
{{- $FieldName := camelcase .Name}}
{{- $fieldName:=snakecase .Name}}
{{- $RetType := .|GoType|Set "package" ""  }}
{{- $Getter := printf "Get%s" $FieldName}}

{{with .Comments.LeadingDetachedComments}} {{ .|contact|join "\n"|withLineSlash }} {{end}}

{{- with .Comments.LeadingComments}} {{ .|withLineSlash }}  {{end}}
{{- with .Comments.TrailingComments}} {{"\n//\n"}}  {{.|withLineSlash}} {{end}}
//   See {{$pbPkg}}.{{$TypeName}} {{$TypeName}}.{{$FieldName}}
//   SourceCodeInfo.Location.Path: {{.LocationPath}}
//   proto info: {{showJSON . 0}}
func(t *{{$StructName}}){{$Getter}}() (ret {{$RetType}}) {
    if t.Empty() {
        return
    }
    {{if eq .Type "TYPE_MESSAGE"}}
        if t.{{$fieldName}} !=nil {
            return t.{{$fieldName}}
        }
        {{if eq .Label "LABEL_REPEATED"}}{{/*messageÊï∞ÁªÑ*/}}
            t.{{$fieldName}} = make({{$RetType}},len(t.pb.{{$Getter}}()))
            {{$retStruct := $RetType.Name}}
            for i,item := range t.pb.{{$Getter}}(){
                elem := new{{$retStruct}}(item)
                elem.setParent(t)
                elem.setIndex(i)
                t.{{$fieldName}}[i] = elem
            }
        {{else}} {{/*ÊôÆÈÄömessage*/}}
            {{$retStrct :=  $RetType.Name}}
            t.{{$fieldName}} = new{{$retStrct}}(t.pb.{{$Getter}}())
            t.{{$fieldName}}.setParent(t)
        {{end}}

        return t.{{$fieldName}}
    {{else}}
        return t.pb.Get{{$FieldName}}()
    {{end}}
} {{- /* end method GetField() */}}

func(t *{{$StructName}}){{$FieldName}}()({{$RetType}}){
    return t.{{$Getter}}()
}


{{- /* range Fields */}}{{end}}

{{/*  ÂÖ∂‰ªñÂÖ¨ÂÖ±ÁöÑÊñπÊ≥ï */}}

func (t *{{$StructName}})PbDescriptor()*{{$pbPkg}}.{{$StructName}}{
    if t == nil || t.pb ==nil {
        return nil
    }
    return t.pb
}

func (t *{{$StructName}}){{$StructName}}()*{{$pbPkg}}.{{$StructName}}{
    return t.PbDescriptor()
}

func (t *{{$StructName}}) MarshalJSON() (b []byte,err error) {
    if t.Empty() {
        return
    }
    buf := {{$bytesPkg}}.NewBuffer(nil)
    err = (&{{$jsonPbPkg}}.Marshaler{}).Marshal(buf, t.pb)
    return buf.Bytes(), err
}


// implement DescriptorCommon.Empty()
func (t *{{$StructName}})Empty() bool {
    return t == nil || t.pb == nil
}

// implement DescriptorCommon.Index()
func (t *{{$StructName}})Index() int {
    if t.Empty(){
        return -1
    }

    return t.getIndex()
}

// implement DescriptorCommon.File()
func (t *{{$StructName}})File() *FileDescriptorProto {
    if t.Empty(){
        return nil
    }

    return t.getFile()
}

// implement DescriptorCommon.Parent()
func (t *{{$StructName}})Parent() DescriptorCommon {
    if t.Empty(){
        return nil
    }

    return t.getParent()
}

// implement DescriptorCommon.LocationPath()
func (t *{{$StructName}})LocationPath() LocationPath {
    if t.Empty(){
        return nil
    }

    return t.getLocationPath()
}


{{if (in $Message.Name $NestableDescriptors)}}
// implement Nestable.IsNested()
func (t *{{$StructName}}) IsNested() bool {
    if t.Empty(){
        return false
    }
    return t.isNested()
}
// implement Nestable.ParentMessage()
func (t *{{$StructName}}) ParentMessage() *DescriptorProto {
    if t.Empty() {
        return nil
    }
    return t.parentMessage()
}
{{end}}

{{if (in $Message.Name "DescriptorProto" "EnumDescriptorProto")}}

// implemented ProtoType.ProtoType()
func (t *{{$StructName}}) ProtoType() *PbTypeInfo {
    if t.Empty() {
        return nil
    }
    if t.pbTypeInfo == nil {
        t.pbTypeInfo = &PbTypeInfo{d: t, names: nestedTypeNames(t)}
    }
    return t.pbTypeInfo
}

{{end}}

