# 全局启用插件
plugins: [ "golang" ]
# 全局变量 - 支持模版解析
data:
  pbPkg: 'google.golang.org/protobuf/types/descriptorpb'
  GoPackages: # 声明包路径【golang】插件交互使用
    # name => import path
    context: "context"
    descriptorpb: 'google.golang.org/protobuf/types/descriptorpb'
  excludeDescriptors: # 排除生成的类型
    - FileDescriptorSet
  ProtoTypeDescriptors: # 需要实现 PbType interface 的类型
    - DescriptorProto
    - EnumDescriptorProto
  NestableDescriptors: # 需要实现 Nestable interface 的类型
    - DescriptorProto
    - EnumDescriptorProto
  CopyRight: |-
    // Code generated by protoc-gen-goku. DO NOT EDIT.
    // source: {{.File.Name}}
  # 以下：动态解析
  WORK_PATH: "{{.Params.workPath}}"
  #  - OUT_PATH: '{{.Params.outPath}}'
  OUT_PATH: 'out'
  TMPL_PATH: '{{.WORK_PATH}}/templates'
  # 输出文件的包名
  outPkg: '{{.Params.outPkgName}}'
  TypeName: '{{if (in .Loop "message" "nested_message" "enum" "nested_enum")}}  {{- .Object|GoTypeBase -}} {{end}}'

jobs:
  - # 测试注释
    name: "showFunc"
    enable:
      loop: [ "file" ]
    plugins: [ "-golang" ]
    template: |-
      {{HelpUsage}}
    ############################################


